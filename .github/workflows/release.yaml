name: Upload Python Package

on:
    release:
        types: [published]

permissions:
    contents: read

jobs:
    pypi-publish:
        name: upload release to PyPI
        runs-on: ubuntu-latest
        permissions:
            id-token: write
        environment: release
        steps:
            - uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.x'
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install --upgrade build twine

            - name: Build
              run: python -m build

            - name: mint API token
              id: mint-token
              run: |
                # retrieve the ambient OIDC token
                resp=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
                    "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=pypi")
                oidc_token=$(jq -r '.value' <<< "${resp}")

                # exchange the OIDC token for an API token
                resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\": \"${oidc_token}\"}")
                api_token=$(jq -r '.token' <<< "${resp}")

                # mask the newly minted API token, so that we don't accidentally leak it
                echo "::add-mask::${api_token}"

                # see the next step in the workflow for an example of using this step output
                echo "api-token=${api_token}" >> "${GITHUB_OUTPUT}"

            - name: publish to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                password: ${{ steps.mint-token.outputs.api-token }}